{"ast":null,"code":"import axios from \"axios\";\nimport { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, UPDATE_LOG, SET_CURRENT, CLEAR_CURRENT } from \"./types\"; // export const getLogs = () =>  (dispatch) => {\n//     dispatch(setLoading());\n//     axios\n//     .get(\"/api/logs\")\n//     .then(res =>\n//       dispatch({\n//         type: GET_LOGS,\n//         payload: res.data\n//     })\n//   ) catch (error) {\n//     dispatch({\n//       type: LOGS_ERROR,\n//       payload: error.res.data,\n//     });\n// };\n\nexport const getLogs = () => dispatch => {\n  dispatch(setLoading());\n  axios.get(\"/api/logs\").then(res => dispatch({\n    type: GET_LOGS,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_LOGS,\n    payload: err.res.data\n  }));\n}; // export const getLogs = () => async (dispatch) => {\n//   try {\n//     setLoading();\n//     const res = await fetch(\"/api/logs\");\n//     const data = await res.json();\n//     dispatch({ type: GET_LOGS, payload: data.data });\n//   } catch (err) {\n//     dispatch({ type: LOGS_ERROR, payload: err });\n//   }\n// };\n// export const addLog = (log) => (dispatch) => {\n//   dispatch(setLoading());\n//   axios\n//     .post(\"/api/logs\", log)\n//     .then((res) =>\n//       dispatch({\n//         type: ADD_LOG,\n//         payload: res.data,\n//       })\n//     )\n//     .catch((err) =>\n//       dispatch({\n//         type: LOGS_ERROR,\n//         payload: err.response.statusText,\n//       })\n//     );\n// };\n\nexport const addLog = log => async dispatch => {\n  try {\n    setLoading();\n    log.date = new Date();\n    const res = await fetch(\"/api/logs\", {\n      method: \"post\",\n      body: JSON.stringify(log),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_LOG,\n      payload: data.data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err\n    });\n  }\n};\nexport const deleteLog = id => async dispatch => {\n  try {\n    setLoading();\n    await fetch(`api/logs/${id}`, {\n      method: \"delete\"\n    });\n    dispatch({\n      type: DELETE_LOG,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err\n    });\n  }\n}; // export const deleteLog = (id) => async (dispatch) => {\n//   try {\n//     setLoading();\n//     await fetch(`/api/logs/${id}`, {\n//       method: \"delete\",\n//     });\n//     dispatch({ type: DELETE_LOG, payload: id });\n//   } catch (err) {\n//     dispatch({ type: LOGS_ERROR, payload: err });\n//   }\n// };\n// keep current log in order to edit\n\nexport const setCurrent = log => {\n  return {\n    type: SET_CURRENT,\n    payload: log\n  };\n}; // export const updateLog = (log) => (dispatch) => {\n//   setLoading();\n//   axios\n//     .put(`/api/logs/${log.id}`)\n//     .then((res) =>\n//       dispatch({\n//         type: UPDATE_LOG,\n//         payload: res.data,\n//       })\n//     )\n//     .catch((error) =>\n//       dispatch({\n//         type: LOGS_ERROR,\n//         payload: error.response.statusText,\n//       })\n//     );\n// };\n// export const updateLog = (log) => async (dispatch) => {\n//   try {\n//     setLoading();\n//     const { message, attention, staff, id } = log;\n//     log.date = new Date();\n//     const res = await fetch(`/api/logs/${id}`, {\n//       method: \"put\",\n//       body: JSON.stringify({ message, attention, staff }),\n//       headers: { \"Content-Type\": \"application/json\" },\n//     });\n//     const data = await res.json();\n//     dispatch({ type: UPDATE_LOG, payload: data.data });\n//   } catch (err) {\n//     dispatch({ type: LOGS_ERROR, payload: err });\n//   }\n// };\n\nconst updateLog = log => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  try {\n    const res = await axios.put(`/api/logs/${log._id}`, log, config);\n    dispatch({\n      type: LOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CONTACT_ERROR,\n      payload: err.response.msg\n    });\n  }\n};\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["C:/Users/17025/Documents/zaxximo/client/src/actions/logActions.js"],"names":["axios","GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","DELETE_LOG","UPDATE_LOG","SET_CURRENT","CLEAR_CURRENT","getLogs","dispatch","setLoading","get","then","res","type","payload","data","catch","err","addLog","log","date","Date","fetch","method","body","JSON","stringify","headers","json","deleteLog","id","setCurrent","updateLog","config","put","_id","LOG","CONTACT_ERROR","response","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,QADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,OAJF,EAKEC,UALF,EAMEC,UANF,EAOEC,WAPF,EAQEC,aARF,QASO,SATP,C,CAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,OAAO,GAAG,MAAOC,QAAD,IAAc;AACzCA,EAAAA,QAAQ,CAACC,UAAU,EAAX,CAAR;AACAX,EAAAA,KAAK,CACFY,GADH,CACO,WADP,EAEGC,IAFH,CAESC,GAAD,IACJJ,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEd,QADC;AAEPe,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,GAAD,CAHZ,EAQGC,KARH,CAQUC,GAAD,IACLT,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEd,QADC;AAEPe,IAAAA,OAAO,EAAEG,GAAG,CAACL,GAAJ,CAAQG;AAFV,GAAD,CATZ;AAcD,CAhBM,C,CAiBP;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMG,MAAM,GAAIC,GAAD,IAAS,MAAOX,QAAP,IAAoB;AACjD,MAAI;AACFC,IAAAA,UAAU;AACVU,IAAAA,GAAG,CAACC,IAAJ,GAAW,IAAIC,IAAJ,EAAX;AACA,UAAMT,GAAG,GAAG,MAAMU,KAAK,CAAC,WAAD,EAAc;AACnCC,MAAAA,MAAM,EAAE,MAD2B;AAEnCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,GAAf,CAF6B;AAGnCQ,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAH0B,KAAd,CAAvB;AAKA,UAAMZ,IAAI,GAAG,MAAMH,GAAG,CAACgB,IAAJ,EAAnB;AAEApB,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEX,OAAR;AAAiBY,MAAAA,OAAO,EAAEC,IAAI,CAACA;AAA/B,KAAD,CAAR;AACD,GAXD,CAWE,OAAOE,GAAP,EAAY;AACZT,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEZ,UAAR;AAAoBa,MAAAA,OAAO,EAAEG;AAA7B,KAAD,CAAR;AACD;AACF,CAfM;AAiBP,OAAO,MAAMY,SAAS,GAAIC,EAAD,IAAQ,MAAOtB,QAAP,IAAoB;AACnD,MAAI;AACFC,IAAAA,UAAU;AAEV,UAAMa,KAAK,CAAE,YAAWQ,EAAG,EAAhB,EAAmB;AAAEP,MAAAA,MAAM,EAAE;AAAV,KAAnB,CAAX;AAEAf,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEV,UAAR;AAAoBW,MAAAA,OAAO,EAAEgB;AAA7B,KAAD,CAAR;AACD,GAND,CAME,OAAOb,GAAP,EAAY;AACZT,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEZ,UAAR;AAAoBa,MAAAA,OAAO,EAAEG;AAA7B,KAAD,CAAR;AACD;AACF,CAVM,C,CAYP;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMc,UAAU,GAAIZ,GAAD,IAAS;AACjC,SAAO;AACLN,IAAAA,IAAI,EAAER,WADD;AAELS,IAAAA,OAAO,EAAEK;AAFJ,GAAP;AAID,CALM,C,CAOP;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMa,SAAS,GAAIb,GAAD,IAAS,MAAOX,QAAP,IAAoB;AAC7C,QAAMyB,MAAM,GAAG;AACbN,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;;AAMA,MAAI;AACF,UAAMf,GAAG,GAAG,MAAMd,KAAK,CAACoC,GAAN,CAAW,aAAYf,GAAG,CAACgB,GAAI,EAA/B,EAAkChB,GAAlC,EAAuCc,MAAvC,CAAlB;AAEAzB,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEuB,GADC;AAEPtB,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOE,GAAP,EAAY;AACZT,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEwB,aADC;AAEPvB,MAAAA,OAAO,EAAEG,GAAG,CAACqB,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CApBD;;AAsBA,OAAO,MAAM9B,UAAU,GAAG,MAAM;AAC9B,SAAO;AACLI,IAAAA,IAAI,EAAEb;AADD,GAAP;AAGD,CAJM","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  UPDATE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n} from \"./types\";\r\n\r\n// export const getLogs = () =>  (dispatch) => {\r\n\r\n//     dispatch(setLoading());\r\n//     axios\r\n//     .get(\"/api/logs\")\r\n//     .then(res =>\r\n//       dispatch({\r\n//         type: GET_LOGS,\r\n//         payload: res.data\r\n//     })\r\n\r\n//   ) catch (error) {\r\n//     dispatch({\r\n//       type: LOGS_ERROR,\r\n//       payload: error.res.data,\r\n//     });\r\n\r\n// };\r\nexport const getLogs = () => (dispatch) => {\r\n  dispatch(setLoading());\r\n  axios\r\n    .get(\"/api/logs\")\r\n    .then((res) =>\r\n      dispatch({\r\n        type: GET_LOGS,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_LOGS,\r\n        payload: err.res.data,\r\n      })\r\n    );\r\n};\r\n// export const getLogs = () => async (dispatch) => {\r\n//   try {\r\n//     setLoading();\r\n\r\n//     const res = await fetch(\"/api/logs\");\r\n//     const data = await res.json();\r\n\r\n//     dispatch({ type: GET_LOGS, payload: data.data });\r\n//   } catch (err) {\r\n//     dispatch({ type: LOGS_ERROR, payload: err });\r\n//   }\r\n// };\r\n\r\n// export const addLog = (log) => (dispatch) => {\r\n//   dispatch(setLoading());\r\n\r\n//   axios\r\n//     .post(\"/api/logs\", log)\r\n//     .then((res) =>\r\n//       dispatch({\r\n//         type: ADD_LOG,\r\n//         payload: res.data,\r\n//       })\r\n//     )\r\n//     .catch((err) =>\r\n//       dispatch({\r\n//         type: LOGS_ERROR,\r\n//         payload: err.response.statusText,\r\n//       })\r\n//     );\r\n// };\r\n\r\nexport const addLog = (log) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    log.date = new Date();\r\n    const res = await fetch(\"/api/logs\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(log),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({ type: ADD_LOG, payload: data.data });\r\n  } catch (err) {\r\n    dispatch({ type: LOGS_ERROR, payload: err });\r\n  }\r\n};\r\n\r\nexport const deleteLog = (id) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`api/logs/${id}`, { method: \"delete\" });\r\n\r\n    dispatch({ type: DELETE_LOG, payload: id });\r\n  } catch (err) {\r\n    dispatch({ type: LOGS_ERROR, payload: err });\r\n  }\r\n};\r\n\r\n// export const deleteLog = (id) => async (dispatch) => {\r\n//   try {\r\n//     setLoading();\r\n\r\n//     await fetch(`/api/logs/${id}`, {\r\n//       method: \"delete\",\r\n//     });\r\n\r\n//     dispatch({ type: DELETE_LOG, payload: id });\r\n//   } catch (err) {\r\n//     dispatch({ type: LOGS_ERROR, payload: err });\r\n//   }\r\n// };\r\n\r\n// keep current log in order to edit\r\nexport const setCurrent = (log) => {\r\n  return {\r\n    type: SET_CURRENT,\r\n    payload: log,\r\n  };\r\n};\r\n\r\n// export const updateLog = (log) => (dispatch) => {\r\n//   setLoading();\r\n\r\n//   axios\r\n//     .put(`/api/logs/${log.id}`)\r\n//     .then((res) =>\r\n//       dispatch({\r\n//         type: UPDATE_LOG,\r\n//         payload: res.data,\r\n//       })\r\n//     )\r\n//     .catch((error) =>\r\n//       dispatch({\r\n//         type: LOGS_ERROR,\r\n//         payload: error.response.statusText,\r\n//       })\r\n//     );\r\n// };\r\n\r\n// export const updateLog = (log) => async (dispatch) => {\r\n//   try {\r\n//     setLoading();\r\n//     const { message, attention, staff, id } = log;\r\n//     log.date = new Date();\r\n//     const res = await fetch(`/api/logs/${id}`, {\r\n//       method: \"put\",\r\n//       body: JSON.stringify({ message, attention, staff }),\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//     });\r\n//     const data = await res.json();\r\n\r\n//     dispatch({ type: UPDATE_LOG, payload: data.data });\r\n//   } catch (err) {\r\n//     dispatch({ type: LOGS_ERROR, payload: err });\r\n//   }\r\n// };\r\n\r\nconst updateLog = (log) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.put(`/api/logs/${log._id}`, log, config);\r\n\r\n    dispatch({\r\n      type: LOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CONTACT_ERROR,\r\n      payload: err.response.msg,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}