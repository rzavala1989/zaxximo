{"ast":null,"code":"import _slicedToArray from\"C:/Users/17025/Documents/zaxximo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import StaffSelectOptions from\"../staff/StaffSelectOptions\";import{connect}from\"react-redux\";import{updateLog}from\"../../actions/logActions\";import M from\"materialize-css/dist/js/materialize.min.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EditLog=function EditLog(_ref){var current=_ref.log.current,updateLog=_ref.updateLog;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),attention=_useState4[0],setAttention=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),staff=_useState6[0],setStaff=_useState6[1];useEffect(function(){if(current){setMessage(current.message);setAttention(current.attention);setStaff(current.staff);}},[current]);var onSubmit=function onSubmit(){if(!message||!staff){M.toast({html:\"Please fill out message and staff fields\"});}else{var updated={id:current._id,message:message,attention:attention,staff:staff// date: new Date(),\n};updateLog(updated);if(updated.message!==current.message){M.toast({html:\"\\\"\".concat(current.message,\"\\\" has been updated to \\\"\").concat(updated.message,\"\\\"\")});}else if(updated.staff!==current.staff){M.toast({html:\"\\\"\".concat(current.message,\"\\\" has been reassigned to \").concat(updated.staff)});}else if(updated.attention!==current.attention){M.toast({html:\"Task has been completed\"});}}setMessage(\"\");setStaff(\"\");setAttention(false);};return/*#__PURE__*/_jsxs(\"div\",{id:\"edit-modal\",className:\"modal\",style:modalStyle,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Update System Log\"}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"input-field\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"message\",value:message,onChange:function onChange(e){return setMessage(e.target.value);}})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"input-field\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"staff\",value:staff,className:\"browser-default\",onChange:function onChange(e){return setStaff(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"Reassign Task To:\"}),/*#__PURE__*/_jsx(StaffSelectOptions,{})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"input-field\",children:/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"filled-in\",checked:attention,value:attention,onChange:function onChange(e){return setAttention(!attention);}}),/*#__PURE__*/_jsx(\"span\",{children:\"Is Completed\"})]})})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-footer\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#!\",onClick:onSubmit,className:\"modal-close waves-effect blue waves-light btn\",children:\"Enter\"})})]});};var modalStyle={width:\"65%\",height:\"55%\"};var mapStatetoProps=function mapStatetoProps(state){return{log:state.log};};export default connect(mapStatetoProps,{updateLog:updateLog})(EditLog);","map":{"version":3,"sources":["C:/Users/17025/Documents/zaxximo/client/src/components/logs/EditLog.js"],"names":["React","useState","useEffect","StaffSelectOptions","connect","updateLog","M","EditLog","current","log","message","setMessage","attention","setAttention","staff","setStaff","onSubmit","toast","html","updated","id","_id","modalStyle","e","target","value","width","height","mapStatetoProps","state"],"mappings":"8JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,kBAAP,KAA+B,6BAA/B,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,SAAT,KAA0B,0BAA1B,CACA,MAAOC,CAAAA,CAAP,KAAc,4CAAd,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAqC,IAA3BC,CAAAA,OAA2B,MAAlCC,GAAkC,CAA3BD,OAA2B,CAAhBH,SAAgB,MAAhBA,SAAgB,CACnD,cAA8BJ,QAAQ,CAAC,EAAD,CAAtC,wCAAOS,OAAP,eAAgBC,UAAhB,eACA,eAAkCV,QAAQ,CAAC,KAAD,CAA1C,yCAAOW,SAAP,eAAkBC,YAAlB,eACA,eAA0BZ,QAAQ,CAAC,EAAD,CAAlC,yCAAOa,KAAP,eAAcC,QAAd,eAEAb,SAAS,CAAC,UAAM,CACd,GAAIM,OAAJ,CAAa,CACXG,UAAU,CAACH,OAAO,CAACE,OAAT,CAAV,CACAG,YAAY,CAACL,OAAO,CAACI,SAAT,CAAZ,CACAG,QAAQ,CAACP,OAAO,CAACM,KAAT,CAAR,CACD,CACF,CANQ,CAMN,CAACN,OAAD,CANM,CAAT,CAQA,GAAMQ,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,GAAI,CAACN,OAAD,EAAY,CAACI,KAAjB,CAAwB,CACtBR,CAAC,CAACW,KAAF,CAAQ,CAAEC,IAAI,CAAE,0CAAR,CAAR,EACD,CAFD,IAEO,CACL,GAAMC,CAAAA,OAAO,CAAG,CACdC,EAAE,CAAEZ,OAAO,CAACa,GADE,CAEdX,OAAO,CAAPA,OAFc,CAGdE,SAAS,CAATA,SAHc,CAIdE,KAAK,CAALA,KACA;AALc,CAAhB,CAOAT,SAAS,CAACc,OAAD,CAAT,CACA,GAAIA,OAAO,CAACT,OAAR,GAAoBF,OAAO,CAACE,OAAhC,CAAyC,CACvCJ,CAAC,CAACW,KAAF,CAAQ,CACNC,IAAI,aAAMV,OAAO,CAACE,OAAd,qCAA+CS,OAAO,CAACT,OAAvD,MADE,CAAR,EAGD,CAJD,IAIO,IAAIS,OAAO,CAACL,KAAR,GAAkBN,OAAO,CAACM,KAA9B,CAAqC,CAC1CR,CAAC,CAACW,KAAF,CAAQ,CACNC,IAAI,aAAMV,OAAO,CAACE,OAAd,sCAAiDS,OAAO,CAACL,KAAzD,CADE,CAAR,EAGD,CAJM,IAIA,IAAIK,OAAO,CAACP,SAAR,GAAsBJ,OAAO,CAACI,SAAlC,CAA6C,CAClDN,CAAC,CAACW,KAAF,CAAQ,CACNC,IAAI,CAAE,yBADA,CAAR,EAGD,CACF,CACDP,UAAU,CAAC,EAAD,CAAV,CACAI,QAAQ,CAAC,EAAD,CAAR,CACAF,YAAY,CAAC,KAAD,CAAZ,CACD,CA7BD,CA8BA,mBACE,aAAK,EAAE,CAAC,YAAR,CAAqB,SAAS,CAAC,OAA/B,CAAuC,KAAK,CAAES,UAA9C,wBACE,aAAK,SAAS,CAAC,eAAf,wBACE,yCADF,cAEE,YAAK,SAAS,CAAC,KAAf,uBACE,YAAK,SAAS,CAAC,aAAf,uBACE,cACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,SAFP,CAGE,KAAK,CAAEZ,OAHT,CAIE,QAAQ,CAAE,kBAACa,CAAD,QAAOZ,CAAAA,UAAU,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB,EAJZ,EADF,EADF,EAFF,cAaE,YAAK,SAAS,CAAC,KAAf,uBACE,aAAK,SAAS,CAAC,aAAf,wBACE,cAAO,OAAO,CAAC,EAAf,EADF,cAEE,gBACE,IAAI,CAAC,OADP,CAEE,KAAK,CAAEX,KAFT,CAGE,SAAS,CAAC,iBAHZ,CAIE,QAAQ,CAAE,kBAACS,CAAD,QAAOR,CAAAA,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf,EAJZ,wBAME,eAAQ,KAAK,CAAC,EAAd,CAAiB,QAAQ,KAAzB,+BANF,cASE,KAAC,kBAAD,IATF,GAFF,GADF,EAbF,cA8BE,YAAK,SAAS,CAAC,KAAf,uBACE,YAAK,SAAS,CAAC,aAAf,uBACE,gCACE,sCACE,cACE,IAAI,CAAC,UADP,CAEE,SAAS,CAAC,WAFZ,CAGE,OAAO,CAAEb,SAHX,CAIE,KAAK,CAAEA,SAJT,CAKE,QAAQ,CAAE,kBAACW,CAAD,QAAOV,CAAAA,YAAY,CAAC,CAACD,SAAF,CAAnB,EALZ,EADF,cAQE,sCARF,GADF,EADF,EADF,EA9BF,GADF,cAgDE,YAAK,SAAS,CAAC,cAAf,uBACE,UACE,IAAI,CAAC,IADP,CAEE,OAAO,CAAEI,QAFX,CAGE,SAAS,CAAC,+CAHZ,mBADF,EAhDF,GADF,CA4DD,CAvGD,CAyGA,GAAMM,CAAAA,UAAU,CAAG,CACjBI,KAAK,CAAE,KADU,CAEjBC,MAAM,CAAE,KAFS,CAAnB,CAKA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCpB,GAAG,CAAEoB,KAAK,CAACpB,GADuB,CAAZ,EAAxB,CAIA,cAAeL,CAAAA,OAAO,CAACwB,eAAD,CAAkB,CAAEvB,SAAS,CAATA,SAAF,CAAlB,CAAP,CAAwCE,OAAxC,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport StaffSelectOptions from \"../staff/StaffSelectOptions\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateLog } from \"../../actions/logActions\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst EditLog = ({ log: { current }, updateLog }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [attention, setAttention] = useState(false);\r\n  const [staff, setStaff] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      setMessage(current.message);\r\n      setAttention(current.attention);\r\n      setStaff(current.staff);\r\n    }\r\n  }, [current]);\r\n\r\n  const onSubmit = () => {\r\n    if (!message || !staff) {\r\n      M.toast({ html: \"Please fill out message and staff fields\" });\r\n    } else {\r\n      const updated = {\r\n        id: current._id,\r\n        message,\r\n        attention,\r\n        staff,\r\n        // date: new Date(),\r\n      };\r\n      updateLog(updated);\r\n      if (updated.message !== current.message) {\r\n        M.toast({\r\n          html: `\"${current.message}\" has been updated to \"${updated.message}\"`,\r\n        });\r\n      } else if (updated.staff !== current.staff) {\r\n        M.toast({\r\n          html: `\"${current.message}\" has been reassigned to ${updated.staff}`,\r\n        });\r\n      } else if (updated.attention !== current.attention) {\r\n        M.toast({\r\n          html: \"Task has been completed\",\r\n        });\r\n      }\r\n    }\r\n    setMessage(\"\");\r\n    setStaff(\"\");\r\n    setAttention(false);\r\n  };\r\n  return (\r\n    <div id=\"edit-modal\" className=\"modal\" style={modalStyle}>\r\n      <div className=\"modal-content\">\r\n        <h4>Update System Log</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"message\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"\"></label>\r\n            <select\r\n              name=\"staff\"\r\n              value={staff}\r\n              className=\"browser-default\"\r\n              onChange={(e) => setStaff(e.target.value)}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Reassign Task To:\r\n              </option>\r\n              <StaffSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"filled-in\"\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={(e) => setAttention(!attention)}\r\n                />\r\n                <span>Is Completed</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect blue waves-light btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: \"65%\",\r\n  height: \"55%\",\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  log: state.log,\r\n});\r\n\r\nexport default connect(mapStatetoProps, { updateLog })(EditLog);\r\n"]},"metadata":{},"sourceType":"module"}