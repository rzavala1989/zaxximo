{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17025\\\\Documents\\\\zaxximo\\\\client\\\\src\\\\components\\\\logs\\\\EditLog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport StaffSelectOptions from \"../staff/StaffSelectOptions\";\nimport { connect } from \"react-redux\";\nimport { updateLog } from \"../../actions/logActions\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditLog = ({\n  log: {\n    current\n  },\n  updateLog\n}) => {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [attention, setAttention] = useState(false);\n  const [staff, setStaff] = useState(\"\");\n  useEffect(() => {\n    if (current) {\n      setMessage(current.message);\n      setAttention(current.attention);\n      setStaff(current.staff);\n    }\n  }, [current]);\n\n  const onSubmit = () => {\n    if (!message || !staff) {\n      M.toast({\n        html: \"Please fill out message and staff fields\"\n      });\n    } else {\n      const updated = {\n        id: current._id,\n        message,\n        attention,\n        staff // date: new Date(),\n\n      };\n      updateLog(updated);\n\n      if (updated.message !== current.message) {\n        M.toast({\n          html: `\"${current.message}\" has been updated to \"${updated.message}\"`\n        });\n      } else if (updated.staff !== current.staff) {\n        M.toast({\n          html: `\"${current.message}\" has been reassigned to ${updated.staff}`\n        });\n      } else if (updated.attention !== current.attention) {\n        M.toast({\n          html: \"Task has been completed\"\n        });\n      }\n    }\n\n    setMessage(\"\");\n    setStaff(\"\");\n    setAttention(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"edit-modal\",\n    className: \"modal\",\n    style: modalStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Update System Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"message\",\n            value: message,\n            onChange: e => setMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"staff\",\n            value: staff,\n            className: \"browser-default\",\n            onChange: e => setStaff(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Reassign Task To:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StaffSelectOptions, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"filled-in\",\n                checked: attention,\n                value: attention,\n                onChange: e => setAttention(!attention)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Is Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#!\",\n        onClick: onSubmit,\n        className: \"modal-close waves-effect blue waves-light btn\",\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditLog, \"HGJbcc4Pv0dtPleEeRbVPaML3Pc=\");\n\n_c = EditLog;\nconst modalStyle = {\n  width: \"65%\",\n  height: \"55%\"\n};\n\nconst mapStatetoProps = state => ({\n  log: state.log\n});\n\nexport default connect(mapStatetoProps, {\n  updateLog\n})(EditLog);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditLog\");","map":{"version":3,"sources":["C:/Users/17025/Documents/zaxximo/client/src/components/logs/EditLog.js"],"names":["React","useState","useEffect","StaffSelectOptions","connect","updateLog","M","EditLog","log","current","message","setMessage","attention","setAttention","staff","setStaff","onSubmit","toast","html","updated","id","_id","modalStyle","e","target","value","width","height","mapStatetoProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport StaffSelectOptions from \"../staff/StaffSelectOptions\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateLog } from \"../../actions/logActions\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst EditLog = ({ log: { current }, updateLog }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [attention, setAttention] = useState(false);\r\n  const [staff, setStaff] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      setMessage(current.message);\r\n      setAttention(current.attention);\r\n      setStaff(current.staff);\r\n    }\r\n  }, [current]);\r\n\r\n  const onSubmit = () => {\r\n    if (!message || !staff) {\r\n      M.toast({ html: \"Please fill out message and staff fields\" });\r\n    } else {\r\n      const updated = {\r\n        id: current._id,\r\n        message,\r\n        attention,\r\n        staff,\r\n        // date: new Date(),\r\n      };\r\n      updateLog(updated);\r\n      if (updated.message !== current.message) {\r\n        M.toast({\r\n          html: `\"${current.message}\" has been updated to \"${updated.message}\"`,\r\n        });\r\n      } else if (updated.staff !== current.staff) {\r\n        M.toast({\r\n          html: `\"${current.message}\" has been reassigned to ${updated.staff}`,\r\n        });\r\n      } else if (updated.attention !== current.attention) {\r\n        M.toast({\r\n          html: \"Task has been completed\",\r\n        });\r\n      }\r\n    }\r\n    setMessage(\"\");\r\n    setStaff(\"\");\r\n    setAttention(false);\r\n  };\r\n  return (\r\n    <div id=\"edit-modal\" className=\"modal\" style={modalStyle}>\r\n      <div className=\"modal-content\">\r\n        <h4>Update System Log</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"message\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"\"></label>\r\n            <select\r\n              name=\"staff\"\r\n              value={staff}\r\n              className=\"browser-default\"\r\n              onChange={(e) => setStaff(e.target.value)}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Reassign Task To:\r\n              </option>\r\n              <StaffSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"filled-in\"\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={(e) => setAttention(!attention)}\r\n                />\r\n                <span>Is Completed</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect blue waves-light btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: \"65%\",\r\n  height: \"55%\",\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  log: state.log,\r\n});\r\n\r\nexport default connect(mapStatetoProps, { updateLog })(EditLog);\r\n"]},"metadata":{},"sourceType":"module"}