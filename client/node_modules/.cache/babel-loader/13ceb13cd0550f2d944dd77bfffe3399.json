{"ast":null,"code":"import axios from \"axios\";\nimport { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, UPDATE_LOG, SET_CURRENT, CLEAR_CURRENT } from \"./types\"; // export const getLogs = () =>  (dispatch) => {\n//     dispatch(setLoading());\n//     axios\n//     .get(\"/api/logs\")\n//     .then(res =>\n//       dispatch({\n//         type: GET_LOGS,\n//         payload: res.data\n//     })\n//   ) catch (error) {\n//     dispatch({\n//       type: LOGS_ERROR,\n//       payload: error.res.data,\n//     });\n// };\n// export const getLogs = () => (dispatch) => {\n//   dispatch(setLoading());\n//   axios\n//     .get(\"/api/logs\")\n//     .then((res) =>\n//       dispatch({\n//         type: GET_LOGS,\n//         payload: res.data,\n//       })\n//     )\n//     .catch((err) =>\n//       dispatch({\n//         type: GET_LOGS,\n//         payload: err.res.data,\n//       })\n//     );\n// };\n\nexport const getLogs = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"/api/logs\");\n    const data = await res.json();\n    dispatch({\n      type: GET_LOGS,\n      payload: data.data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err\n    });\n  }\n}; // export const addLog = (log) => (dispatch) => {\n//   dispatch(setLoading());\n//   axios\n//     .post(\"/api/logs\", log)\n//     .then((res) =>\n//       dispatch({\n//         type: ADD_LOG,\n//         payload: res.data,\n//       })\n//     )\n//     .catch((err) =>\n//       dispatch({\n//         type: LOGS_ERROR,\n//         payload: err.response.statusText,\n//       })\n//     );\n// };\n\nexport const deleteLog = id => dispatch => {\n  setLoading();\n  axios.delete(`/api/logs/${id}`).then(res => dispatch({\n    type: DELETE_LOG,\n    payload: res.id\n  })).catch(error => dispatch({\n    type: LOGS_ERROR,\n    //since you dont have the res variable, us response\n    payload: error.response.data\n  }));\n}; // keep current log in order to edit\n\nexport const setCurrent = log => {\n  return {\n    type: SET_CURRENT,\n    payload: log\n  };\n};\nexport const updateLog = log => dispatch => {\n  setLoading();\n  axios.put(`/api/logs/${log.id}`).then(res => dispatch({\n    type: UPDATE_LOG,\n    payload: res.data\n  })).catch(error => dispatch({\n    type: LOGS_ERROR,\n    payload: error.response.statusText\n  }));\n};\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["C:/Users/17025/Documents/zaxximo/client/src/actions/logActions.js"],"names":["axios","GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","DELETE_LOG","UPDATE_LOG","SET_CURRENT","CLEAR_CURRENT","getLogs","dispatch","setLoading","res","fetch","data","json","type","payload","err","deleteLog","id","delete","then","catch","error","response","setCurrent","log","updateLog","put","statusText"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,QADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,OAJF,EAKEC,UALF,EAMEC,UANF,EAOEC,WAPF,EAQEC,aARF,QASO,SATP,C,CAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC/C,MAAI;AACFC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,WAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAL,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEf,QAAR;AAAkBgB,MAAAA,OAAO,EAAEH,IAAI,CAACA;AAAhC,KAAD,CAAR;AACD,GAPD,CAOE,OAAOI,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEb,UAAR;AAAoBc,MAAAA,OAAO,EAAEC;AAA7B,KAAD,CAAR;AACD;AACF,CAXM,C,CAaP;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAIC,EAAD,IAASV,QAAD,IAAc;AAC7CC,EAAAA,UAAU;AAEVX,EAAAA,KAAK,CACFqB,MADH,CACW,aAAYD,EAAG,EAD1B,EAEGE,IAFH,CAESV,GAAD,IACJF,QAAQ,CAAC;AACPM,IAAAA,IAAI,EAAEX,UADC;AAEPY,IAAAA,OAAO,EAAEL,GAAG,CAACQ;AAFN,GAAD,CAHZ,EASGG,KATH,CASUC,KAAD,IACLd,QAAQ,CAAC;AACPM,IAAAA,IAAI,EAAEb,UADC;AAEP;AACAc,IAAAA,OAAO,EAAEO,KAAK,CAACC,QAAN,CAAeX;AAHjB,GAAD,CAVZ;AAgBD,CAnBM,C,CAoBP;;AACA,OAAO,MAAMY,UAAU,GAAIC,GAAD,IAAS;AACjC,SAAO;AACLX,IAAAA,IAAI,EAAET,WADD;AAELU,IAAAA,OAAO,EAAEU;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,MAAMC,SAAS,GAAID,GAAD,IAAUjB,QAAD,IAAc;AAC9CC,EAAAA,UAAU;AAEVX,EAAAA,KAAK,CACF6B,GADH,CACQ,aAAYF,GAAG,CAACP,EAAG,EAD3B,EAEGE,IAFH,CAESV,GAAD,IACJF,QAAQ,CAAC;AACPM,IAAAA,IAAI,EAAEV,UADC;AAEPW,IAAAA,OAAO,EAAEL,GAAG,CAACE;AAFN,GAAD,CAHZ,EAQGS,KARH,CAQUC,KAAD,IACLd,QAAQ,CAAC;AACPM,IAAAA,IAAI,EAAEb,UADC;AAEPc,IAAAA,OAAO,EAAEO,KAAK,CAACC,QAAN,CAAeK;AAFjB,GAAD,CATZ;AAcD,CAjBM;AAkBP,OAAO,MAAMnB,UAAU,GAAG,MAAM;AAC9B,SAAO;AACLK,IAAAA,IAAI,EAAEd;AADD,GAAP;AAGD,CAJM","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  UPDATE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n} from \"./types\";\r\n\r\n// export const getLogs = () =>  (dispatch) => {\r\n\r\n//     dispatch(setLoading());\r\n//     axios\r\n//     .get(\"/api/logs\")\r\n//     .then(res =>\r\n//       dispatch({\r\n//         type: GET_LOGS,\r\n//         payload: res.data\r\n//     })\r\n\r\n//   ) catch (error) {\r\n//     dispatch({\r\n//       type: LOGS_ERROR,\r\n//       payload: error.res.data,\r\n//     });\r\n\r\n// };\r\n// export const getLogs = () => (dispatch) => {\r\n//   dispatch(setLoading());\r\n//   axios\r\n//     .get(\"/api/logs\")\r\n//     .then((res) =>\r\n//       dispatch({\r\n//         type: GET_LOGS,\r\n//         payload: res.data,\r\n//       })\r\n//     )\r\n//     .catch((err) =>\r\n//       dispatch({\r\n//         type: GET_LOGS,\r\n//         payload: err.res.data,\r\n//       })\r\n//     );\r\n// };\r\nexport const getLogs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/api/logs\");\r\n    const data = await res.json();\r\n\r\n    dispatch({ type: GET_LOGS, payload: data.data });\r\n  } catch (err) {\r\n    dispatch({ type: LOGS_ERROR, payload: err });\r\n  }\r\n};\r\n\r\n// export const addLog = (log) => (dispatch) => {\r\n//   dispatch(setLoading());\r\n\r\n//   axios\r\n//     .post(\"/api/logs\", log)\r\n//     .then((res) =>\r\n//       dispatch({\r\n//         type: ADD_LOG,\r\n//         payload: res.data,\r\n//       })\r\n//     )\r\n//     .catch((err) =>\r\n//       dispatch({\r\n//         type: LOGS_ERROR,\r\n//         payload: err.response.statusText,\r\n//       })\r\n//     );\r\n// };\r\n\r\nexport const deleteLog = (id) => (dispatch) => {\r\n  setLoading();\r\n\r\n  axios\r\n    .delete(`/api/logs/${id}`)\r\n    .then((res) =>\r\n      dispatch({\r\n        type: DELETE_LOG,\r\n        payload: res.id,\r\n      })\r\n    )\r\n\r\n    .catch((error) =>\r\n      dispatch({\r\n        type: LOGS_ERROR,\r\n        //since you dont have the res variable, us response\r\n        payload: error.response.data,\r\n      })\r\n    );\r\n};\r\n// keep current log in order to edit\r\nexport const setCurrent = (log) => {\r\n  return {\r\n    type: SET_CURRENT,\r\n    payload: log,\r\n  };\r\n};\r\nexport const updateLog = (log) => (dispatch) => {\r\n  setLoading();\r\n\r\n  axios\r\n    .put(`/api/logs/${log.id}`)\r\n    .then((res) =>\r\n      dispatch({\r\n        type: UPDATE_LOG,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((error) =>\r\n      dispatch({\r\n        type: LOGS_ERROR,\r\n        payload: error.response.statusText,\r\n      })\r\n    );\r\n};\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}