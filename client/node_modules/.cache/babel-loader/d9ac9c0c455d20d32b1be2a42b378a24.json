{"ast":null,"code":"import React,{useEffect,Fragment}from\"react\";import LogItem from\"./LogItem\";import Preloader from\"../layout/Preloader\";import{getLogs}from\"../../actions/logActions\";import{connect}from\"react-redux\";import{CSSTransitionGroup}from\"react-transition-group\";import M from\"materialize-css/dist/js/materialize.min.js\";//grab from bottom of file mapstatetoprops\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Logs=function Logs(_ref){var _ref$log=_ref.log,logs=_ref$log.logs,loading=_ref$log.loading,getLogs=_ref.getLogs;useEffect(function(){getLogs();},[]);document.addEventListener(\"DOMContentLoaded\",function(){var elems=document.querySelectorAll(\".tooltipped\");M.Tooltip.init(elems);});if(loading||logs===null){return/*#__PURE__*/_jsx(Preloader,{});}return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsxs(\"ul\",{className:\"collection with-header z-depth-4\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"collection-header\",children:/*#__PURE__*/_jsx(\"h4\",{className:\"center\",children:\"System Logs\"})}),/*#__PURE__*/_jsxs(\"li\",{className:\"collection-item\",children:[/*#__PURE__*/_jsx(\"span\",{id:\"t-head\",children:\"Logs\"}),/*#__PURE__*/_jsx(\"span\",{id:\"t-head-icon\",children:\"Delete Log\"})]}),!loading&&logs.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"center\",children:\"No logs to show...\"}):logs.map(function(log){return/*#__PURE__*/_jsx(CSSTransitionGroup,{transitionName:\"list-item\",transitionAppear:true,transitionAppearTimeout:500,transitionEnter:true,transitionEnterTimeout:500,transitionLeave:true,transitionLeaveTimeout:300,children:/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(LogItem,{log:log},log._id)})});})]})});};var mapStateToProps=function mapStateToProps(state){return{log:state.log,current:null,loading:false,error:null};};export default connect(mapStateToProps,{getLogs:getLogs})(Logs);","map":{"version":3,"sources":["C:/Users/17025/Documents/zaxximo/client/src/components/logs/Logs.js"],"names":["React","useEffect","Fragment","LogItem","Preloader","getLogs","connect","CSSTransitionGroup","M","Logs","log","logs","loading","document","addEventListener","elems","querySelectorAll","Tooltip","init","length","map","_id","mapStateToProps","state","current","error"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,qBAAtB,CACA,OAASC,OAAT,KAAwB,0BAAxB,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,kBAAT,KAAmC,wBAAnC,CACA,MAAOC,CAAAA,CAAP,KAAc,4CAAd,CAEA;wFACA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAyC,mBAAtCC,GAAsC,CAA/BC,IAA+B,UAA/BA,IAA+B,CAAzBC,OAAyB,UAAzBA,OAAyB,CAAdP,OAAc,MAAdA,OAAc,CACpDJ,SAAS,CAAC,UAAM,CACdI,OAAO,GACR,CAFQ,CAEN,EAFM,CAAT,CAIAQ,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,CAA8C,UAAY,CACxD,GAAIC,CAAAA,KAAK,CAAGF,QAAQ,CAACG,gBAAT,CAA0B,aAA1B,CAAZ,CACAR,CAAC,CAACS,OAAF,CAAUC,IAAV,CAAeH,KAAf,EACD,CAHD,EAKA,GAAIH,OAAO,EAAID,IAAI,GAAK,IAAxB,CAA8B,CAC5B,mBAAO,KAAC,SAAD,IAAP,CACD,CAED,mBACE,KAAC,QAAD,wBACE,YAAI,SAAS,CAAC,kCAAd,wBACE,WAAI,SAAS,CAAC,mBAAd,uBACE,WAAI,SAAS,CAAC,QAAd,yBADF,EADF,cAIE,YAAI,SAAS,CAAC,iBAAd,wBACE,aAAM,EAAE,CAAC,QAAT,kBADF,cAEE,aAAM,EAAE,CAAC,aAAT,wBAFF,GAJF,CAQG,CAACC,OAAD,EAAYD,IAAI,CAACQ,MAAL,GAAgB,CAA5B,cACC,UAAG,SAAS,CAAC,QAAb,gCADD,CAGCR,IAAI,CAACS,GAAL,CAAS,SAACV,GAAD,qBACP,KAAC,kBAAD,EACE,cAAc,CAAC,WADjB,CAEE,gBAAgB,CAAE,IAFpB,CAGE,uBAAuB,CAAE,GAH3B,CAIE,eAAe,CAAE,IAJnB,CAKE,sBAAsB,CAAE,GAL1B,CAME,eAAe,CAAE,IANnB,CAOE,sBAAsB,CAAE,GAP1B,uBASE,iCACE,KAAC,OAAD,EAAS,GAAG,CAAEA,GAAd,EAAwBA,GAAG,CAACW,GAA5B,CADF,EATF,EADO,EAAT,CAXJ,GADF,EADF,CAgCD,CA9CD,CAgDA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCb,GAAG,CAAEa,KAAK,CAACb,GADuB,CAElCc,OAAO,CAAE,IAFyB,CAGlCZ,OAAO,CAAE,KAHyB,CAIlCa,KAAK,CAAE,IAJ2B,CAAZ,EAAxB,CAOA,cAAenB,CAAAA,OAAO,CAACgB,eAAD,CAAkB,CAAEjB,OAAO,CAAPA,OAAF,CAAlB,CAAP,CAAsCI,IAAtC,CAAf","sourcesContent":["import React, { useEffect, Fragment } from \"react\";\r\nimport LogItem from \"./LogItem\";\r\nimport Preloader from \"../layout/Preloader\";\r\nimport { getLogs } from \"../../actions/logActions\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransitionGroup } from \"react-transition-group\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\n//grab from bottom of file mapstatetoprops\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n  useEffect(() => {\r\n    getLogs();\r\n  }, []);\r\n\r\n  document.addEventListener(\"DOMContentLoaded\", function () {\r\n    var elems = document.querySelectorAll(\".tooltipped\");\r\n    M.Tooltip.init(elems);\r\n  });\r\n\r\n  if (loading || logs === null) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ul className=\"collection with-header z-depth-4\">\r\n        <li className=\"collection-header\">\r\n          <h4 className=\"center\">System Logs</h4>\r\n        </li>\r\n        <li className=\"collection-item\">\r\n          <span id=\"t-head\">Logs</span>\r\n          <span id=\"t-head-icon\">Delete Log</span>\r\n        </li>\r\n        {!loading && logs.length === 0 ? (\r\n          <p className=\"center\">No logs to show...</p>\r\n        ) : (\r\n          logs.map((log) => (\r\n            <CSSTransitionGroup\r\n              transitionName=\"list-item\"\r\n              transitionAppear={true}\r\n              transitionAppearTimeout={500}\r\n              transitionEnter={true}\r\n              transitionEnterTimeout={500}\r\n              transitionLeave={true}\r\n              transitionLeaveTimeout={300}\r\n            >\r\n              <li>\r\n                <LogItem log={log} key={log._id} />\r\n              </li>\r\n            </CSSTransitionGroup>\r\n          ))\r\n        )}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  log: state.log,\r\n  current: null,\r\n  loading: false,\r\n  error: null,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getLogs })(Logs);\r\n"]},"metadata":{},"sourceType":"module"}